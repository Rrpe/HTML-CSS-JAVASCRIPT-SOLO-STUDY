## 함수

# DUAL 테이블 

SELECT 24*60*60 FROM DUAL;
#테이블이 존재할 경우 dual 대신 테이블의 컬럼 값을 쓰면 테이블에 있는 데이터 갯수만큼 출력된다.
#테이블이 존재하지 않아도 사용할 수 있다. (한 행만 나옴)

DESC DUAL
# DUAL의 데이터 값(DUMMY)이 나온다.

SELECT * FROM DUAL;
#DUMMY 컬럼에는 X라는 값을 가진 로우가 있다. 로우에는 한개의 문자만을 저장할 수 있다.


#일반 함수

INITCAP
#문자열의 첫번째 문자만 대문자로 변환
initcap(student)->Student

LOWER
#문자열 전체를 소문자로 변환
lower(ABC) -> abc

UPPER
#문자열 전체를 대문자로 변환
upper(abc) -> ABC

LENGTH
#문자열의 길이를 반환
length('홍길동') -> 3

LENGTHB
#문자열의 바이트 수를 반환
lengthb('홍길동') -> 6

CONCAT
#두 문자열을 결합  ||와 동일
concat('sql','plus') -> sqlplus

SUBSTR
#특정문자 또는 문자열 일부를 추출
substr('sql*plus', 5, 4) -> plus

SUBSTRB
#바이트 수를 기준으로 문자열 일부만 추출
substrb('데이터베이스', 3, 4) -> 이

INSTR
#특정 문자의 위치 구함
instr('database', 'b') -> 5

INSTRB
#바이트 수를 기준으로 문자의 위치를 구함
instrb('데이터베이스', '이') -> 4

LPAD
#오른쪽 정렬 후 왼쪽에 지정한 문자 삽입
lpad('sql', 4, '*') -> **sql

RPAD
#왼쪽 정렬 후 오른쪽에 지정한 문자 삽입
rpad('sql', 4, '*') -> sql**

LTRIM
#

RTRIM
#



ROUND(column_name, -1)
#정수단위 숫자를 첫 번째(일 단위) 숫자에서 반올림 해준다.

ROUND(column_name, 1)
#소수점단위 숫자를 첫 번째 숫자에서 반올림 해준다